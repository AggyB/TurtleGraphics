\documentclass{article}
%\VignetteEngine{knitr::knitr}
% \VignetteIndexEntry{Turbo Turtle packge}
\usepackage{subfigure}

\begin{document}

\begin{center}
{\LARGE A Guide to the \textsf{TurboTurtle} Package for \textsf{R}}

\bigskip
{\large A. Cena, M. Kosi\'{n}ski, B.~\.{Z}oga\l{}a-Siudem}

\begin{figure}[hbt!]
\centering
\includegraphics[width=3in]{figures/turtle.pdf}
\end{figure}

\end{center}



\section{The \textsf{TurboTurtle} Package Introduction}

The \textsf{TurboTurtle} package offers to R-users functionality of the famous ''turtle graphics'' from Logo educational programming language. The main idea standing behind it is to encourage children to learn programming and show that working with computer can be fun and creative.

The \textsf{TurboTurtle} package allows to create sophisticated graphics on basis of lines.  
The main idea is that the Turtle, desribed by its location and orientation, moves with commands that are relative to its own position. The line he left behind can also be controlled, by enabling it or setting its color and type.

The \textsf{TurboTurtle} package offers functions to move forward or backward a given distance and to turn the Turtle in a choosen direction. The graphical parameter of the plot, like for example color, type or visibility of the line, can also be easily changed.   


\section{The \textsf{TurboTurtle} moving}

\subsection{Let the party started!}
To install package \textsf{TurboTurtle} you should use following instructions.
<<eval=FALSE>>=
if (!require(devtools)) {
    install.packages("devtools")
    require(devtools)
}
install_github("andromeda14/TurboTurtle")
@

After that you can load package with standard \textsf{require()} function, as it is shown below.
<<results='hide'>>=
require("TurboTurtle")
@
 
The program is started with \textsf{turtle\_init()} function, which create a plot region and places the turtle in its central point, see Figure~\ref{Fig:initMove}a.
<<fig.keep='none', results='hold'>>=
turtle_init()
@
Now, we can move the turtle forward, for example for a distance of 3 units, with the use of the \textsf{move\_forward()} function, see Figure~\ref{Fig:initMove}b
<<fig.keep='none', eval=FALSE>>=
move_forward(dist=3)
@
If you would like to change directions -- you may use \textsf{left()} or \textsf{right()} functions, which change the turtle direction of a given angle. For example, we may turn 45 degrees in the right  direction. The results are presented in Figure~\ref{Fig:initMove}cd.
<<fig.keep='none', eval=FALSE>>=
right(angle=45)
move_forward(dist=5)
@

\begin{figure}[hbt!]
\subfigure[Initiation of the turtle]{
\includegraphics[width=2.5in]{figures/init.pdf}}
\subfigure[Moving forward ]{
\includegraphics[width=2.5in]{figures/move.pdf}}
\subfigure[Turning right]{
\includegraphics[width=2.5in]{figures/turn.pdf}}
\subfigure[Moving forward]{
\includegraphics[width=2.5in]{figures/turnMove.pdf}}
\caption{TurboTurtle}\label{Fig:initMove}
\end{figure}

\subsection{Visibility settings}

To unable the path from being drawn we can simply use \textsf{up()} function. Let us consider simple example. We will turn the turtle in right direction about 90 degrees and then use the \textsf{up()} function. Now when we move forward the path is not visible. If we want to draw the path we should call \textsf{down()} function. The ilustration of this commands is presented in Figure~\ref{Fig:UpDown}ab. 

<<fig.keep='none', eval=FALSE>>=
right(90)
up()
move_forward(dist=3)
right(45)
down()
move_forward(dist=4)
@

Similarly, we may show or hide thr Turtle image, using \textsf{show()} and \textsf{hide()} functions respectively, see Figure~\ref{Fig:UpDown}cd.

<<fig.keep='none', eval=FALSE>>=
hide()
right(60)
move_forward(4)
show()
@


\begin{figure}[hbt!]
\subfigure[Unable to draw path]{
\includegraphics[width=2.3in]{figures/up.pdf}}
\subfigure[Enable to draw path]{
\includegraphics[width=2.3in]{figures/down.pdf}}
\subfigure[Hide the Turtle image]{
\includegraphics[width=2.3in]{figures/hide.pdf}}
\subfigure[Display the Turtle image]{
\includegraphics[width=2.3in]{figures/show.pdf}}
\caption{TurboTurtle}\label{Fig:UpDown}
\end{figure}


\subsection{Graphical parameters}
To set graphical parameters please use the \textsf{set\_param()} function, which allows to change the color of tha path, its types and thickness~e.g.
<<fig.keep='none', eval=FALSE>>=
set_param(col="red", lwd=2, lty=3)
move_forward(5)
@

Results are presented in Figure~\ref{Fig:SetParam}

\begin{figure}[hbt!]
\includegraphics[width=3in]{figures/setParam.pdf}
\caption{Changing graphical parameters}\label{Fig:SetParam}
\end{figure}
$\,$\\
\noindent You may also change graphical parameters more easily by functions \textsf{set\_col()}, \textsf{set\_lty()}, \textsf{set\_lwd()}. Each of them takes exactly one argument to be passed to \textsf{set\_param()}.

\section{Fast Turtle plotting a.k.a. TurboTurtle}
To be able to plot bigger plots as in figure \ref{Fig:examples} and bigger, you should hide your Turtle before plotting and show just after the figure is plotted. It will take much less time to do it. For example you can try plotting drunken turtle:
<<fig.keep='none', eval=FALSE>>=
turtle_init()
hide()
for(i in 1:1000){
  left(sample(1:360, 1))
  move_forward(runif(1, 1, 3))
}
show()
@


\section{Examples}
With TurboTurtle you can draw everything and more! Examples of drawings are in the figure \ref{Fig:examples}\\
\begin{figure}
\subfigure[Snowflake]{\includegraphics[width=2.5in]{figures/turtle_snowflake.pdf}}
\subfigure[Spiderweb]{\includegraphics[width=2.5in]{figures/turtle_spiderweb.pdf}}
\subfigure[Drunken turtle]{\includegraphics[width=2.5in]{figures/drunken_turtle.pdf}}
\caption{What turtle does in the free time}
\label{Fig:examples}
\end{figure}
\end{document}